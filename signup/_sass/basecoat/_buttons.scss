// Shared styles
.btn {
  position: relative;
  display: inline-block;
  padding: 0.65em 1.25em;
  font-size: inherit;
  font-weight: 500;
  line-height: 20px;
  color: $body-color;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  background-color: #eee;
  background-image: linear-gradient(#fcfcfc, #eee);
  border: 1px solid #d5d5d5;
  border-radius: 0.25em;
  -webkit-appearance: none; // Corrects inability to style clickable `input` types in iOS.

  &:focus {
    text-decoration: none;
    border-color: #51a7e8;
    outline: none;
    box-shadow: 0 0 5px rgba(81, 167, 232, 0.5);
  }

  &:focus:hover,
  &.selected:focus {
    border-color: #51a7e8;
  }

  &:hover,
  &:active,
  &.zeroclipboard-is-hover,
  &.zeroclipboard-is-active {
    text-decoration: none;
    background-color: #ddd;
    background-image: linear-gradient(#eee, #ddd);
    border-color: #ccc;
  }

  &:active,
  &.selected,
  &.zeroclipboard-is-active {
    background-color: #dcdcdc;
    background-image: none;
    border-color: #b5b5b5;
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15);
  }

  &.selected:hover {
    background-color: darken(#dcdcdc, 5%);
  }

  &:disabled,
  &.disabled {
    &,
    &:hover {
      color: rgba(102, 102, 102, 0.5);
      cursor: default;
      background-color: rgba(229, 229, 229, 0.5);
      background-image: none;
      border-color: rgba(197, 197, 197, 0.5);
      box-shadow: none;
    }
  }
}


// Minibutton overrides
//
// Tweak `line-height` to make them smaller.
.btn-sm {
  padding: 2px 10px;
}

// Full-width button
//
// These buttons expand to the full width of their parent container
.btn-block {
  display: block;
  width: 100%;
  text-align: center;
}

// Radio buttons
//
// Buttons backed by radio or checkbox control. Requires the use of `.hidden`
// on the `input` to properly hide it.
.btn-link {
  display: inline-block;
  padding: 0;
  font-size: inherit;
  color: $link-color;
  white-space: nowrap;
  cursor: pointer;
  user-select: none;
  background: transparent;
  border: 0;
  -webkit-appearance: none; // Corrects inability to style clickable `input` types in iOS.

  &:hover,
  &:focus {
    text-decoration: underline;
    background: transparent;
  }

  &:focus {
    outline: none; // Prevents the blue ring when clicked.
  }
}

// Create color and size variations of our `.btn`
@mixin btn-solid($foreground, $background) {
  padding: 0.55em 1em;
  font-weight: 500; // to avoid faux-bolding
  font-size: inherit;
  line-height: 1.5;
  color: $foreground;
  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.15);
  background-color: $background;
  background-image: linear-gradient(lighten($background, 5%), darken($background, 5%));
  border-color: darken($background, 10%);

  &:hover {
    color: #fff;
    background-color: darken($background, 5%);
    background-image: linear-gradient($background, darken($background, 10%));
    border-color: darken($background, 15%);
  }

  &:active {
    text-shadow: 0 1px 0 rgba(0, 0, 0, 0.15);
    background-color: darken($background, 10%);
    background-image: none;
    border-color: darken($background, 10%);
  }

  &.disabled {
    text-shadow: none;
  }
}

.btn-purple {@include btn-solid($white, $purple);}
.btn-blue {@include btn-solid($white, $blue);}
.btn-orange {@include btn-solid($white, $orange);}
.btn-themed {@include btn-solid($white, $theme-color);}


// Outline button
//
// For when we need a linky-action that's not too heavy in busier
// areas like conversation timelines.
[class*="btn-outline"] {
  color: $link-color;
  background-color: transparent; // Reset default gradient backgrounds and colors
  background-image: none;
  border: 1px solid $border-color;

  svg {
    fill: $gray-dark;
  }

  &:hover,
  &:active,
  &.selected,
  &.zeroclipboard-is-hover,
  &.zeroclipboard-is-active {
    color: $white;
    background-color: $link-color;
    background-image: none;
    border-color: $border-color-link;

    svg {
      fill: $white;
    }
  }

  &.selected:hover {
    background-color: $link-hover-color;
  }

  &:disabled,
  &.disabled {
    &,
    &:hover {
      color: $gray-light;
      background-color: #fff;
      background-image: none;
      border-color: $border-color;
    }
  }
}

// Create color variations of our `.btn-outline`
@mixin btn-outline-theme($color, $bg: $theme-color) {
  color: $color;
  border-color: $color;
  border-radius: 0.25em;

  &:hover,
  &:active {
    background-color: $color;
    border-color: $color;

    @if (lightness($color) > 50) {
      color: $theme-color;
    } @else {
      color: #fff;
    }
  }
}

.btn-outline-purple {@include btn-outline-theme($purple);}
.btn-outline-blue {@include btn-outline-theme($blue);}
.btn-outline-orange {@include btn-outline-theme($orange);}
.btn-outline-white {@include btn-outline-theme($white);}
.btn-outline-themed {@include btn-outline-theme($theme-color);}

.btn-lg {
  padding: 16px 30px;
  font-size: 18px;
}
